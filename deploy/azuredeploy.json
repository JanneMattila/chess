{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "repositoryUrl": {
      "type": "string",
      "metadata": {
        "description": "Github repository."
      }
    },
    "branch": {
      "type": "string",
      "metadata": {
        "description": "GitHub branch."
      }
    },
    "repositoryToken": {
      "type": "securestring",
      "metadata": {
        "description": "GitHub repository token."
      }
    },
    "clientId": {
      "type": "string",
      "metadata": {
        "description": "Azure AD ClientId of API application."
      }
    },
    "applicationIdURI": {
      "type": "string",
      "metadata": {
        "description": "Azure AD API Applications audience."
      }
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "customDomain": {
      "type": "string",
      "metadata": {
        "description": "Custom domain assigned to the CDN"
      }
    },
    "alertEmailAddress": {
      "type": "string",
      "metadata": {
        "description": "Alert email address."
      }
    },
    "signalRServicePricingTier": {
      "type": "string",
      "allowedValues": [
        "Free_F1",
        "Standard_S1"
      ],
      "metadata": {
        "description": "SignalR Service Pricing tier. Check details at https://azure.microsoft.com/en-us/pricing/details/signalr-service/"
      }
    },
    "signalRServiceUnits": {
      "type": "int",
      "minValue": 1,
      "allowedValues": [
        1,
        2,
        5,
        10,
        20,
        50,
        100
      ],
      "metadata": {
        "description": "SignalR Service unit count"
      }
    },
    "webPushPublicKey": {
      "type": "string",
      "metadata": {
        "description": "WebPush Public Key. Used in sending web notifications."
      }
    },
    "webPushPrivateKey": {
      "type": "string",
      "metadata": {
        "description": "WebPush Private Key. Used in sending web notifications."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "appName": "mychess",
    "appInsightsName": "[concat('ai-',variables('appName'))]",
    "appSignalRName": "[concat('mychess', uniqueString(resourceGroup().id))]",
    "appStorageName": "[concat('mychess', uniqueString(resourceGroup().id))]",
    "appAlertActionGroup": "[concat(variables('appName'), 'ActionGroup')]",
    "appInsightsExceptionQueryName": "[concat(variables('appName'), 'AppInsightsExceptionQuery')]",
    // "spaAppPing": "SPAPing",
    // "backendPing": "BackendPing",
    // "cdnName": "[concat('mychesscdn-', uniqueString(resourceGroup().id))]",
    "customDomainUri": "[concat('https://',parameters('customDomain'))]"
  },
  "resources": [
    {
      "name": "[variables('appStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2018-07-01",
      "sku": {
        "name": "[parameters('storageType')]"
      },
      "dependsOn": [
      ],
      "tags": {
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "name": "[variables('appName')]",
      "type": "Microsoft.Web/staticSites",
      "location": "[parameters('location')]",
      "apiVersion": "2021-01-15",
      "properties": {
        "repositoryUrl": "[parameters('repositoryUrl')]",
        "branch": "[parameters('branch')]",
        "repositoryToken": "[parameters('repositoryToken')]",
        "buildProperties": {
          "appLocation": "src/MyChess.Client",
          "apiLocation": "src/MyChess.Functions"
        }
      },
      "sku": {
        "Tier": "Free",
        "Name": "Free"
      },
      "resources": [
        {
          "apiVersion": "2021-01-15",
          "name": "appsettings",
          "type": "config",
          "location": "[parameters('location')]",
          "properties": {
            "AzureSignalRConnectionString": "[listKeys(resourceId('Microsoft.SignalRService/SignalR', variables('appSignalRName')),'2018-10-01').primaryConnectionString]",

            "Storage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('appStorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('appStorageName')), '2018-02-01').keys[0].value)]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]",

            "WebPush:PublicServerUri": "[variables('customDomainUri')]",
            "WebPush:PublicKey": "[parameters('webPushPublicKey')]",
            "WebPush:PrivateKey": "[parameters('webPushPrivateKey')]",

            "AzureAD:ClientId": "[parameters('clientId')]",
            "AzureAD:Audience": "[parameters('applicationIdURI')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/staticSites', variables('appName'))]"
          ]
        }
      ]
    },
    // {
    //   "name": "[variables('appInsightsName')]",
    //   "type": "Microsoft.Insights/components",
    //   "location": "[parameters('location')]",
    //   "apiVersion": "2015-05-01",
    //   "kind": "web",
    //   "dependsOn": [
    //   ],
    //   "tags": {
    //     "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appServiceName'))]": "Resource"
    //   },
    //   "properties": {
    //     "Application_Type": "web",
    //     "applicationId": "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
    //   }
    // },
    {
      "name": "[variables('appSignalRName')]",
      "type": "Microsoft.SignalRService/SignalR",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "sku": {
        "name": "[parameters('signalRServicePricingTier')]",
        "capacity": "[parameters('signalRServiceUnits')]"
      },
      "properties": {
        "hostNamePrefix": "[variables('appSignalRName')]",
        "features": [
          {
            "flag": "ServiceMode",
            "value": "Serverless"
          }
        ]
      }
    },
    {
      "name": "[variables('appAlertActionGroup')]",
      "type": "microsoft.insights/actionGroups",
      "location": "Global",
      "apiVersion": "2019-06-01",
      "properties": {
        "groupShortName": "webAppAG",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "notify by email",
            "emailAddress": "[parameters('alertEmailAddress')]",
            "useCommonAlertSchema": true
          }
        ],
        "smsReceivers": [
        ],
        "webhookReceivers": [
        ],
        "itsmReceivers": [
        ],
        "azureAppPushReceivers": [
          {
            "name": "notify by app",
            "emailAddress": "[parameters('alertEmailAddress')]"
          }
        ],
        "automationRunbookReceivers": [
        ],
        "voiceReceivers": [
        ],
        "logicAppReceivers": [
        ],
        "azureFunctionReceivers": [
        ],
        "armRoleReceivers": [
          {
            /*
           * Use "Owner" role:
           * https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#owner
           */
            "name": "owner",
            "roleId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "useCommonAlertSchema": true
          }
        ]
      },
      "dependsOn": [
      ]
    },
    {
      "name": "[variables('appInsightsExceptionQueryName')]",
      "type": "microsoft.insights/scheduledqueryrules",
      "location": "[parameters('location')]",
      "apiVersion": "2018-04-16",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Insights/components/', variables('appInsightsName'))]": "Resource"
      },
      "scale": null,
      "properties": {
        "description": "Scheduled query to find exceptions occurred in the app in last 5 minutes.",
        "enabled": "true",
        "source": {
          "query": "exceptions",
          "authorizedResources": [
          ],
          "dataSourceId": "[resourceId('microsoft.insights/components', variables('appInsightsName'))]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": 5,
          "timeWindowInMinutes": 5
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "2",
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": 0
          },
          "aznsAction": {
            "actionGroup": [
              "[resourceId('microsoft.insights/actionGroups', variables('appAlertActionGroup'))]"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/components', variables('appInsightsName'))]"
      ]
    }
    /*
     * See more details about supported metrics:
     * https://docs.microsoft.com/en-us/azure/azure-monitor/platform/metrics-supported
     */
    // {
    //   "name": "[variables('appHighUsageAlertName')]",
    //   "type": "microsoft.insights/metricalerts",
    //   "location": "global",
    //   "apiVersion": "2018-03-01",
    //   "properties": {
    //     "description": "High usage of our Company Web App.",
    //     "enabled": true,
    //     "severity": 4,
    //     "scopes": [
    //       "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
    //     ],
    //     "evaluationFrequency": "PT1M",
    //     "windowSize": "PT1M",
    //     "criteria": {
    //       "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
    //       "allOf": [
    //         {
    //           "name": "CPU Percentage",
    //           "metricName": "CpuPercentage",
    //           "dimensions": [
    //           ],
    //           "operator": "GreaterThan",
    //           "criterionType": "StaticThresholdCriterion",
    //           "threshold": 50,
    //           "timeAggregation": "Total"
    //         }
    //       ]
    //     },
    //     "actions": [
    //       {
    //         "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('appAlertActionGroup'))]"
    //       }
    //     ]
    //   },
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
    //   ]
    // },
    // {
    //   "name": "[variables('spaAppPing')]",
    //   "type": "Microsoft.Insights/webtests",
    //   "location": "[resourceGroup().location]",
    //   "apiVersion": "2015-05-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //     "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
    //   ],
    //   "tags": {
    //     "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource",
    //     "displayName": "Front page ping test"
    //   },
    //   "properties": {
    //     "SyntheticMonitorId": "[variables('spaAppPing')]",
    //     "Name": "[variables('spaAppPing')]",
    //     "Description": "SPA app ping test",
    //     "Enabled": true,
    //     "Frequency": 300,
    //     "Timeout": 120,
    //     "Kind": "ping",
    //     "Locations": [
    //       {
    //         "Id": "emea-se-sto-edge"
    //       },
    //       {
    //         "Id": "emea-nl-ams-azr"
    //       }
    //     ],
    //     "Configuration": {
    //       "WebTest": "[concat('<WebTest Name=\"spaAppPing\" Id=\"bd64298a-fed7-46bf-b6e4-424a4dd671c2\"  Enabled=\"True\"  Timeout=\"120\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" PreAuthenticate=\"True\" Proxy=\"default\">        <Items>        <Request         Method=\"GET\"         Guid=\"af2d44c8-86e8-7ab0-bc73-e12c778c60ea\"         Version=\"1.1\"         Url=\"', variables('customDomainUri'), '\"         ThinkTime=\"0\"         Timeout=\"120\"         ParseDependentRequests=\"True\"         FollowRedirects=\"True\"         RecordResult=\"True\"         Cache=\"False\"         ResponseTimeGoal=\"0\"         Encoding=\"utf-8\"         ExpectedHttpStatusCode=\"200\"         ExpectedResponseUrl=\"\"         ReportingName=\"\"         IgnoreHttpStatusCode=\"False\" />        </Items>        </WebTest>')]"
    //     }
    //   }
    // },
    // {
    //   "name": "spaAppPingTestAlert",
    //   "type": "microsoft.insights/metricalerts",
    //   "location": "global",
    //   "apiVersion": "2018-03-01",
    //   "tags": {
    //     "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource",
    //     "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', variables('spaAppPing')))]": "Resource"
    //   },
    //   "properties": {
    //     "description": "SPA app ping test.",
    //     "enabled": true,
    //     "severity": 4,
    //     "scopes": [
    //       "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //       "[resourceId('Microsoft.Insights/webtests', variables('spaAppPing'))]"
    //     ],
    //     "evaluationFrequency": "PT5M",
    //     "windowSize": "PT15M",
    //     "criteria": {
    //       "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
    //       "webTestId": "[resourceId('Microsoft.Insights/webtests', variables('spaAppPing'))]",
    //       "componentId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //       "failedLocationCount": 1
    //     },
    //     "actions": [
    //       {
    //         "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('appAlertActionGroup'))]"
    //       }
    //     ]
    //   },
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //     "[resourceId('Microsoft.Insights/webtests', variables('spaAppPing'))]"
    //   ]
    // },
    // {
    //   "name": "[variables('backendPing')]",
    //   "type": "Microsoft.Insights/webtests",
    //   "location": "[resourceGroup().location]",
    //   "apiVersion": "2015-05-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //     "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
    //   ],
    //   "tags": {
    //     "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource",
    //     "displayName": "Backend ping test"
    //   },
    //   "properties": {
    //     "SyntheticMonitorId": "[variables('backendPing')]",
    //     "Name": "[variables('backendPing')]",
    //     "Description": "Backend ping test",
    //     "Enabled": true,
    //     "Frequency": 300,
    //     "Timeout": 120,
    //     "Kind": "ping",
    //     "Locations": [
    //       {
    //         "Id": "emea-se-sto-edge"
    //       },
    //       {
    //         "Id": "emea-nl-ams-azr"
    //       }
    //     ],
    //     "Configuration": {
    //       "WebTest": "[concat('<WebTest Name=\"backendPing\" Id=\"bd64298a-fed7-46bf-b6e4-424a4dd671c2\"  Enabled=\"True\"  Timeout=\"120\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" PreAuthenticate=\"True\" Proxy=\"default\">        <Items>        <Request         Method=\"GET\"         Guid=\"af2d44c8-86e8-7ab0-bc73-e12c778c60ea\"         Version=\"1.1\"         Url=\"', concat('https://',reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).hostNames[0],'/api/ping'), '\"         ThinkTime=\"0\"         Timeout=\"120\"         ParseDependentRequests=\"True\"         FollowRedirects=\"True\"         RecordResult=\"True\"         Cache=\"False\"         ResponseTimeGoal=\"0\"         Encoding=\"utf-8\"         ExpectedHttpStatusCode=\"200\"         ExpectedResponseUrl=\"\"         ReportingName=\"\"         IgnoreHttpStatusCode=\"False\" />        </Items>        </WebTest>')]"
    //     }
    //   }
    // },
    // {
    //   "name": "backendPingTestAlert",
    //   "type": "microsoft.insights/metricalerts",
    //   "location": "global",
    //   "apiVersion": "2018-03-01",
    //   "tags": {
    //     "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource",
    //     "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', variables('backendPing')))]": "Resource"
    //   },
    //   "properties": {
    //     "description": "Backend ping test.",
    //     "enabled": true,
    //     "severity": 4,
    //     "scopes": [
    //       "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //       "[resourceId('Microsoft.Insights/webtests', variables('backendPing'))]"
    //     ],
    //     "evaluationFrequency": "PT5M",
    //     "windowSize": "PT15M",
    //     "criteria": {
    //       "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
    //       "webTestId": "[resourceId('Microsoft.Insights/webtests', variables('backendPing'))]",
    //       "componentId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //       "failedLocationCount": 1
    //     },
    //     "actions": [
    //       {
    //         "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('appAlertActionGroup'))]"
    //       }
    //     ]
    //   },
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
    //     "[resourceId('Microsoft.Insights/webtests', variables('backendPing'))]"
    //   ]
    // }
  ],
  "outputs": {
    // "webAppName": {
    //   "type": "string",
    //   "value": "[variables('appServiceName')]"
    // },
    // "webAppUri": {
    //   "type": "string",
    //   "value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).hostNames[0])]"
    // },
    "instrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
    },
    "cdnCustomDomainUri": {
      "type": "string",
      "value": "[variables('customDomainUri')]"
    }
  }
}
